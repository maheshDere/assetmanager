syntax = "proto3";
package assetproto;

service AssetService {
   rpc CreateAsset(CreateAssetReq) returns (ListAssetResp) { }
   rpc GetAsset(AssetReq) returns (ListAssetResp) { }
   rpc GetMediaLibrary(AssetReq) returns (ListAssetResp) { }
}

message CreateAssetReq {
 string caption = 1;
 string description = 2;
 string asset_type = 3;  // mandatory: image, video, audio
 string url = 4;    // mandatory: URL from the CDN
 string source = 5;  // mandatory: CDN source: S3, CloudFlare etc. will help map credentials
 string owner = 6;   // mandatory
 bool private = 7;   // default: true
 repeated string tags = 8;  
}

message AssetReq {
   string id = 1;   // find by ID (overrides all else)
   string tag = 2;  // find by tag
   string owner = 3;  // (mandatory only if private is true)
   bool private = 4; // if true, return owner's assets otherwise public assets
   bool video = 5;    
   bool audio = 6;
   bool image = 7;
   int32 limit = 8;  // max number of assets (default: 100)
   int32 offset = 9; // pangination support. 
}

message Asset {
   string url = 1;          // mandatory: URL from the CDN
   string asset_type = 2;  // mandatory: image, video, audio
   string id = 3;
   repeated string tags = 4; 
   string caption = 5;
   string description = 6; 
}

 message ListAssetResp{
 repeated Asset assets = 1;
}
